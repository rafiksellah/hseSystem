{% extends 'base.html.twig' %}

{% block title %}Statistiques Globales - Super Admin{% endblock %}

{% block page_title %}
<i class="fas fa-chart-pie text-primary"></i> Statistiques Globales
<small class="text-muted">Analyse complète du système HSE</small>
{% endblock %}

{% block body %}
<!-- Vue d'ensemble -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Total Rapports HSE
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            {{ stats.rapports_par_zone|map(v => v)|reduce((total, value) => total + value, 0) }}
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Rapports Clôturés
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            {{ stats.rapports_par_statut['Clôturé'] ?? 0 }}
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Rapports En Cours
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            {{ stats.rapports_par_statut['En cours'] ?? 0 }}
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-exclamation-triangle fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Total Utilisateurs
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">
                            {{ stats.utilisateurs_par_zone|map(v => v)|reduce((total, value) => total + value, 0) }}
                        </div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <!-- Graphique rapports par zone -->
    <div class="col-lg-6 mb-4">
        <div class="card shadow h-100">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-pie"></i> Rapports par Zone Utilisateur
                </h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <!-- Container avec hauteur fixe pour le graphique -->
                        <div class="chart-container" style="position: relative; height: 200px; width: 100%;">
                            <canvas id="rapportsZoneChart"></canvas>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <!-- Légende à côté -->
                        <div class="mt-3">
                            {% for zone, count in stats.rapports_par_zone %}
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge {{ zone == 'SIMTIS' ? 'bg-info' : 'bg-purple' }} me-2">
                                    {{ zone }}
                                </span>
                                <small class="font-weight-bold">{{ count }}</small>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Graphique utilisateurs par zone -->
    <div class="col-lg-6 mb-4">
        <div class="card shadow h-100">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-users"></i> Utilisateurs par Zone
                </h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <!-- Container avec hauteur fixe pour le graphique -->
                        <div class="chart-container" style="position: relative; height: 200px; width: 100%;">
                            <canvas id="utilisateursZoneChart"></canvas>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <!-- Légende à côté -->
                        <div class="mt-3">
                            {% for zone, count in stats.utilisateurs_par_zone %}
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <span class="badge {{ zone == 'SIMTIS' ? 'bg-info' : 'bg-purple' }} me-2">
                                    {{ zone }}
                                </span>
                                <small class="font-weight-bold">{{ count }}</small>
                            </div>
                            {% endfor %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Évolution temporelle -->
<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-line"></i> Évolution des Rapports (12 derniers mois)
                </h6>
            </div>
            <div class="card-body">
                <div class="chart-container" style="position: relative; height: 300px;">
                    <canvas id="evolutionRapportsChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-line"></i> Évolution des Utilisateurs (12 derniers mois)
                </h6>
            </div>
            <div class="card-body">
                <div class="chart-container" style="position: relative; height: 300px;">
                    <canvas id="evolutionUsersChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Top zones actives et statuts -->
<div class="row">
    <div class="col-lg-8 mb-4">
        <div class="card shadow">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-trophy"></i> Top 10 des Zones les Plus Actives
                </h6>
            </div>
            <div class="card-body">
                {% if stats.top_zones_actives is not empty %}
                <div class="table-responsive">
                    <table class="table table-borderless">
                        <thead>
                            <tr>
                                <th>Rang</th>
                                <th>Zone de Travail</th>
                                <th>Nombre de Rapports</th>
                                <th>Progression</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for key, zone_data in stats.top_zones_actives %}
                            <tr>
                                <td>
                                    {% if loop.index <= 3 %} <span
                                        class="badge {{ loop.index == 1 ? 'bg-warning' : (loop.index == 2 ? 'bg-secondary' : 'bg-dark') }}">
                                        #{{ loop.index }}
                                        </span>
                                        {% else %}
                                        <span class="text-muted">#{{ loop.index }}</span>
                                        {% endif %}
                                </td>
                                <td>
                                    <strong>{{ zone_data.zone }}</strong>
                                </td>
                                <td>
                                    <span class="badge bg-primary">{{ zone_data.total }}</span>
                                </td>
                                <td>
                                    <div class="progress" style="height: 8px;">
                                        <div class="progress-bar bg-primary"
                                            style="width: {{ (zone_data.total / stats.top_zones_actives[0].total * 100)|round }}%">
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>
                {% else %}
                <div class="text-center text-muted py-4">
                    <i class="fas fa-chart-bar fa-3x mb-3"></i>
                    <p>Aucune donnée de zone disponible</p>
                </div>
                {% endif %}
            </div>
        </div>
    </div>

    <!-- Répartition des statuts -->
    <div class="col-lg-4 mb-4">
        <div class="card shadow h-100">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">
                    <i class="fas fa-chart-donut"></i> Répartition par Statut
                </h6>
            </div>
            <div class="card-body d-flex flex-column">
                <!-- Graphique en cercle plus petit -->
                <div class="chart-container mb-3" style="position: relative; height: 200px;">
                    <canvas id="statutChart"></canvas>
                </div>

                <!-- Statistiques détaillées -->
                <div class="mt-auto">
                    {% for statut, count in stats.rapports_par_statut %}
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <span class="badge {{ statut == 'Clôturé' ? 'bg-success' : 'bg-warning' }}">
                            {{ statut }}
                        </span>
                        <span class="font-weight-bold">{{ count }}</span>
                    </div>
                    {% endfor %}

                    <!-- Taux de clôture -->
                    {% set total_rapports = stats.rapports_par_statut|map(v => v)|reduce((total, value) => total +
                    value, 0) %}
                    {% set rapports_clotures = stats.rapports_par_statut['Clôturé'] ?? 0 %}
                    {% if total_rapports > 0 %}
                    <div class="mt-3 pt-3 border-top">
                        <div class="text-center">
                            <h5 class="text-success mb-1">{{ ((rapports_clotures / total_rapports) * 100)|round(1) }}%
                            </h5>
                            <small class="text-muted">Taux de clôture</small>
                        </div>
                    </div>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Actions rapides -->
<div class="card shadow">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">
            <i class="fas fa-bolt"></i> Actions Rapides
        </h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-3 mb-2">
                <a href="{{ path('app_super_admin_rapports') }}" class="btn btn-primary w-100">
                    <i class="fas fa-clipboard-list"></i> Voir tous les rapports
                </a>
            </div>
            <div class="col-md-3 mb-2">
                <a href="{{ path('app_super_admin_users') }}" class="btn btn-info w-100">
                    <i class="fas fa-users"></i> Gérer les utilisateurs
                </a>
            </div>
            <div class="col-md-3 mb-2">
                <a href="{{ path('app_admin_export_excel') }}" class="btn btn-success w-100">
                    <i class="fas fa-file-excel"></i> Export Excel
                </a>
            </div>
            <div class="col-md-3 mb-2">
                <a href="{{ path('app_admin_export_pdf') }}" class="btn btn-danger w-100">
                    <i class="fas fa-file-pdf"></i> Export PDF
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-purple {
        background-color: #6610f2 !important;
    }

    .chart-container {
        position: relative;
    }

    .chart-container canvas {
        max-height: 100% !important;
        max-width: 100% !important;
    }

    /* Améliorer l'affichage responsive */
    @media (max-width: 768px) {
        .chart-container {
            height: 250px !important;
        }
    }
</style>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Options communes pour les graphiques
        const commonOptions = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                }
            }
        };

        // Graphique rapports par zone
        const rapportsZoneCtx = document.getElementById('rapportsZoneChart').getContext('2d');
        new Chart(rapportsZoneCtx, {
            type: 'doughnut',
            data: {
                labels: [{% for zone, count in stats.rapports_par_zone %}'{{ zone }}'{% if not loop.last %}, {% endif %}{% endfor %}],
        datasets: [{
            data: [{% for zone, count in stats.rapports_par_zone %}{{ count }}{% if not loop.last %}, {% endif %} {% endfor %}],
    backgroundColor: ['#17a2b8', '#6610f2'],
        borderWidth: 2,
            cutout: '60%' // Crée un effet donut
            }]
        },
    options: {
            ...commonOptions,
            plugins: {
                ...commonOptions.plugins,
                tooltip: {
                callbacks: {
                    label: function(context) {
                        return context.label + ': ' + context.parsed + ' rapports';
                    }
                }
            }
        }
    }
    });

    // Graphique utilisateurs par zone
    const utilisateursZoneCtx = document.getElementById('utilisateursZoneChart').getContext('2d');
    new Chart(utilisateursZoneCtx, {
        type: 'doughnut',
        data: {
            labels: [{% for zone, count in stats.utilisateurs_par_zone %}'{{ zone }}'{% if not loop.last %}, {% endif %}{% endfor %}],
        datasets: [{
            data: [{% for zone, count in stats.utilisateurs_par_zone %}{{ count }}{% if not loop.last %}, {% endif %} {% endfor %}],
    backgroundColor: ['#17a2b8', '#6610f2'],
        borderWidth: 2,
            cutout: '60%'
            }]
        },
    options: {
            ...commonOptions,
            plugins: {
                ...commonOptions.plugins,
                tooltip: {
                callbacks: {
                    label: function(context) {
                        return context.label + ': ' + context.parsed + ' utilisateurs';
                    }
                }
            }
        }
    }
    });

    // Graphique évolution rapports
    const evolutionRapportsCtx = document.getElementById('evolutionRapportsChart').getContext('2d');
    new Chart(evolutionRapportsCtx, {
        type: 'line',
        data: {
            labels: [{% for mois, count in stats.rapports_par_mois %}'{{ mois }}'{% if not loop.last %}, {% endif %}{% endfor %}],
        datasets: [{
            label: 'Rapports créés',
            data: [{% for mois, count in stats.rapports_par_mois %}{{ count }}{% if not loop.last %}, {% endif %} {% endfor %}],
    borderColor: '#007bff',
        backgroundColor: 'rgba(0, 123, 255, 0.1)',
            tension: 0.4,
                fill: true,
                    pointBackgroundColor: '#007bff',
                        pointBorderColor: '#fff',
                            pointBorderWidth: 2
            }]
        },
    options: {
            ...commonOptions,
            scales: {
            y: {
                beginAtZero: true,
                    grid: {
                    color: 'rgba(0,0,0,0.1)'
                }
            },
            x: {
                grid: {
                    display: false
                }
            }
        },
        plugins: {
            legend: {
                display: true,
                    position: 'top'
            }
        }
    }
    });

    // Graphique évolution utilisateurs
    const evolutionUsersCtx = document.getElementById('evolutionUsersChart').getContext('2d');
    new Chart(evolutionUsersCtx, {
        type: 'line',
        data: {
            labels: [{% for mois, count in stats.evolution_utilisateurs %}'{{ mois }}'{% if not loop.last %}, {% endif %}{% endfor %}],
        datasets: [{
            label: 'Utilisateurs créés',
            data: [{% for mois, count in stats.evolution_utilisateurs %}{{ count }}{% if not loop.last %}, {% endif %} {% endfor %}],
    borderColor: '#28a745',
        backgroundColor: 'rgba(40, 167, 69, 0.1)',
            tension: 0.4,
                fill: true,
                    pointBackgroundColor: '#28a745',
                        pointBorderColor: '#fff',
                            pointBorderWidth: 2
            }]
        },
    options: {
            ...commonOptions,
            scales: {
            y: {
                beginAtZero: true,
                    grid: {
                    color: 'rgba(0,0,0,0.1)'
                }
            },
            x: {
                grid: {
                    display: false
                }
            }
        },
        plugins: {
            legend: {
                display: true,
                    position: 'top'
            }
        }
    }
    });

    // Graphique statuts
    const statutCtx = document.getElementById('statutChart').getContext('2d');
    new Chart(statutCtx, {
        type: 'doughnut',
        data: {
            labels: [{% for statut, count in stats.rapports_par_statut %}'{{ statut }}'{% if not loop.last %}, {% endif %}{% endfor %}],
        datasets: [{
            data: [{% for statut, count in stats.rapports_par_statut %}{{ count }}{% if not loop.last %}, {% endif %} {% endfor %}],
    backgroundColor: ['#28a745', '#ffc107'],
        borderWidth: 2,
            cutout: '60%'
            }]
        },
    options: {
            ...commonOptions,
            plugins: {
                ...commonOptions.plugins,
                tooltip: {
                callbacks: {
                    label: function(context) {
                        const total = context.dataset.data.reduce((a, b) => a + b, 0);
                        const percentage = ((context.parsed / total) * 100).toFixed(1);
                        return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                    }
                }
            }
        }
    }
    });
});
</script>
{% endblock %}